var request = require('request');
var _ = require('underscore');
var c;

module.exports = function(config, callback) {
  c = config;

  httpRequest(function(err, d) {
    rejectTag(d, function(err, da) {
      filterGroup(da, function(err, dat) {
        cleanData(dat, function(err, data) {
          callback(null, data);
        });
      });
    });
  });
};

function httpRequest(callback) {
  request(
      {
        method: c.phoneSystemInformation.method,
        //proxy: "http://127.0.0.1:8888",
        uri: c.phoneSystemInformation.protocol + c.phoneSystemInformation.host +
            c.agent.uri,
        headers: {
          'Authorization': 'Basic ' + new Buffer(
              c.phoneSystemInformation.phoneSystemUsername + ':' +
              c.phoneSystemInformation.phoneSystemGetToken).toString('base64'),
        },
      }, function(error, response, html) {
        if (error || response.statusCode != 200) {
          callback(null, 'ERROR');
        } else {
          var agents = JSON.parse(html)['agent'] || 'FAILED';
          if (agents == 'FAILED') {
            callback(null, 'FAILED');
          } else {
            callback(null, agents);
          }
        }
        ;
      });
};

function rejectTag(data, callback) {
  callback(null, _.reject(data, {'media-type': 'vmail'}));
};

function filterGroup(data, callback) {
  callback(null, _.filter(data, function(que) {
    return que['group-id'] == '111';
  }));
};

function cleanData(data, callback) {

  for (var i = 0; i < data.length; i++) {
    var json = {};
    for (var j = 0; j < c.agent.returnedFields.length; j++) {
      json[c.agent.returnedFields[j]] = data[i][c.agent.returnedFields[j]];
    }
    data[i] = json;
  }
  ;
  callback(null, data);
};
